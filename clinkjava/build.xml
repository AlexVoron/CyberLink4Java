<?xml version="1.0" encoding="utf-8"?>
<project name="clinkjava" basedir="." default="help">
<!-- ===================== Property Definitions =========================== -->

  <property file="build.properties"/>
  <property file="${user.home}/build.properties"/>

<!-- ==================== File and Directory Names ======================== -->

  <property name="dist.home" value="${basedir}/dist"/>
  <property name="docs.home" value="${basedir}./docs"/>
  <property name="src.home" value="${basedir}/src"/>
  <property name="build.home" value="${basedir}/build"/>
  <property name="build.classes" value="${build.home}/classes"/>
  <property name="build.resources" value="${build.home}/resources"/>

  <property name="project.name" value="clinkjava"/>
  <property name="app.version" value="1.8"/>

  <property name="media-gate.class" value="org.cybergarage.mediagate.MediaGate"/>
  <property name="sample-controlpoint.class" value="CtrlPoint"/>
  <property name="sample-clock.class" value="ClockFrame"/>
  <property name="sample-aircon.class" value="AirconFrame"/>
  <property name="sample-light.class" value="LightFrame"/>
  <property name="sample-remotectrl.class" value="RemoteCtrlFrame"/>
  <property name="sample-tv.class" value="TvFrame"/>
  <property name="sample-washer.class" value="WasherFrame"/>
  <property name="sample-rui-player.class" value="RemoteUIPlayer"/>
  <property name="sample-rui-server.class" value="RemoteUIClockServer"/>
  <property name="upnp-sample-igd-tool.class" value="UpnpIGDTool"/>
  <property name="upnp-sample-proxy.class" value="UpnpProxy"/>

  <path id="clinkjava.src">
     <pathelement location="${src.home}/http"/>
     <pathelement location="${src.home}/net"/>
     <pathelement location="${src.home}/soap"/>
     <pathelement location="${src.home}/sql"/>
     <pathelement location="${src.home}/upnp"/>
     <pathelement location="${src.home}/util"/>
     <pathelement location="${src.home}/xml"/>
     <pathelement location="${src.home}/flash"/>
  </path>
  
  <path id="clinkjava.media.src">
     <pathelement location="${src.home}/upnp-media"/>
  </path>

  <path id="clinkjava.rui.src">
     <pathelement location="${src.home}/upnp-rui"/>
  </path>

  <path id="clinkjava.proxy.src">
     <pathelement location="${src.home}/upnp-proxy"/>
  </path>
  
  <path id="clinkjava.proxy.gui.src">
     <pathelement location="${src.home}/upnp-proxy-gui"/>
  </path>
  
  <path id="clinkjava.sample.src">
     <pathelement location="${src.home}/upnp-sample-clock"/>
     <pathelement location="${src.home}/upnp-sample-controlpoint"/>
     <pathelement location="${src.home}/upnp-sample-aircon"/>
     <pathelement location="${src.home}/upnp-sample-light"/>
     <pathelement location="${src.home}/upnp-sample-remotectrl"/>
     <pathelement location="${src.home}/upnp-sample-tv"/>
     <pathelement location="${src.home}/upnp-sample-washer"/>
     <pathelement location="${src.home}/upnp-sample-rui-player"/>
     <pathelement location="${src.home}/upnp-sample-rui-server"/>
     <pathelement location="${src.home}/upnp-sample-igd-tool"/>
     <pathelement location="${src.home}/upnp-sample-proxy"/>
  </path>

  <path id="cmgate.src">
     <pathelement location="${src.home}/upnp-media-gate"/>
  </path>

  <property name="compile.debug" value="true"/>
  <property name="compile.deprecation" value="false"/>
  <property name="compile.optimize" value="true"/>
  <property name="compile.nowarn" value="on"/>

  <path id="extlib.classpath">
    <fileset dir="lib">
      <include name="*.jar"/>
    </fileset>
  </path>
  
  <path id="debug.classpath">
      <pathelement location="${build.classes}"/>
      <path refid="extlib.classpath"/>
      <pathelement location="${build.resources}"/>
  </path>

  <path id="release.classpath">
      <path refid="extlib.classpath"/>
      <pathelement location="${dist.home}/${project.name}-${app.version}-bin.jar"/>
  </path>

  <!-- ==================== All Target ====================================== -->

  <target name="all" depends="clean, compile, run" description="Clean build and dist directories, then compile"/>


<!-- ==================== Clean Target ==================================== -->

  <target name="clean" description="Delete old build and dist directories">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>

<!-- ==================== Compile Target ================================== -->
  <target name="compile" depends="prepare"  description="Compile Java sources">
    <mkdir    dir="${build.classes}"/>
    <javac 
            destdir="${build.classes}"
            debug="${compile.debug}"
            deprecation="${compile.deprecation}"
            optimize="${compile.optimize}"
            nowarn="${compile.nowarn}"
        >
        <classpath refid="extlib.classpath"/>
        <src refid="clinkjava.src"/>
        <src refid="clinkjava.media.src"/>
        <src refid="clinkjava.rui.src"/>
        <src refid="clinkjava.proxy.src"/>
        <src refid="clinkjava.proxy.gui.src"/>
        <src refid="clinkjava.sample.src"/>
        <src refid="cmgate.src"/>
    </javac>
  </target>

  <target name="get-jvm">
    <condition property="jvm.ok">
        <equals arg1="${ant.java.version}" arg2="1.4"/>
    </condition>
  </target>

  <target name="check-jvm" depends="get-jvm" unless="jvm.ok">
    <fail message="Wrong JVM - ${ant.java.version}, required 1.4"/>
  </target>

    <!-- ==================== Run media-gate ================================== -->
    <target name="media-gate" description="UPnP media gate server, to run, type: ant media-gate -Dargs='-mythtv'">
	<echo message="Using parameters ${args}"/>
        <antcall target="run">
            <param name="app.class"     value="${media-gate.class}" />
            <param name="app.params"    value="${args}" />
        </antcall>
    </target>

    <!-- ==================== Run controlpoint ================================== -->
    <target name="controlpoint" description="Run example: controlpoint">
        <antcall target="run">
            <param name="app.class" value="${sample-controlpoint.class}" />
        </antcall>
  </target>

    <!-- ==================== Run clock ================================== -->
    <target name="clock" description="Run example: clock">
        <antcall target="run">
            <param name="app.class" value="${sample-clock.class}" />
        </antcall>
  </target>


    <!-- ==================== Run Target ================================== -->
  <target name="run" depends="compile">
    <java fork="yes" classname="${app.class}">
        <classpath refid="debug.classpath"/>
        <arg line="${app.params}"/>
    </java>
  </target>

<!-- ==================== Prepare Target ================================== -->

 <target name="prepare">
     <mkdir  dir="${build.home}"/>
     <mkdir  dir="${build.classes}"/>
     <mkdir  dir="${build.home}/lib"/>
     <mkdir  dir="${basedir}/lib"/>

    <available classname="org.xmlpull.v1.XmlPullParser" classpathref="debug.classpath" property="xmlpull.present"/>
    <available classname="org.kxml2.io.KXmlParser"       classpathref="debug.classpath" property="kxml2.present"/>
    <available classname="com.mysql.jdbc.Driver"           classpathref="debug.classpath" property="mysql.present"/>
    <available classname="org.apache.xerces.parsers.DOMParser" classpathref="debug.classpath" property="xerces.present"/>
	<available classname="javax.net.SSLSocket" classpathref="debug.classpath" property="jsse.present"/>

     <fail unless="xmlpull.present">
         Missing external jar library: xmlpull-*.jar
         Please grab a latest version from: http://www.xmlpull.org/
         ant put under ${basedir}/lib/
     </fail>

     <fail unless="kxml2.present">
         Missing external jar library: kxml2-*.jar
         Please grab a latest version from: http://kxml.sourceforge.net/
         ant put under ${basedir}/lib/
     </fail>

     <fail unless="mysql.present">
         Missing external jar library: mysql-connector-java-*-bin.jar
         Please grab a latest version from:   http://dev.mysql.com/downloads/connector/j/3.0.html
         ant put under ${basedir}/lib/
     </fail>

     <fail unless="xerces.present">
         Missing external jar library: xerces-j2-*.jar
         Please grab a latest version from:   http://archive.apache.org/dist/xml/xerces-j/
         ant put under ${basedir}/lib/
     </fail>

    <fail unless="jsse.present">
        Missing external jar library: jsse.jar
        Please grab a latest version from:   http://java.sun.com/products/jsse/
        ant put under ${basedir}/lib/
    </fail>
 </target>


<!-- ==================== Dist Target ===================================== -->

  <target name="dist-lib" depends="compile, javadoc" description="Create binary distribution for package">
    <jar jarfile="${dist.home}/${project.name}-${app.version}-bin.jar" basedir="${build.classes}">
        <manifest>
            <attribute name="Built-By"            value="${user.name}"/>
            <attribute name="Version"           value="${app.version}"/>
        </manifest>
    </jar>
  </target>
  
  <target name="dist-cmgate" depends="compile, javadoc" description="Create binary distribution for package">
    <jar jarfile="${dist.home}/${project.name}-${app.version}-bin.jar" basedir="${build.classes}">
        <manifest>
            <attribute name="Built-By"            value="${user.name}"/>
            <attribute name="Main-Class"     value="${app.class}"/>
            <attribute name="Version"           value="${app.version}"/>
        </manifest>
    </jar>
  </target>

<!-- ==================== Javadoc Target ================================== -->

  <target name="javadoc" depends="compile" description="Create Javadoc API documentation">
    <mkdir dir="${dist.home}/docs/api"/>
    <javadoc sourcepathref="app.src.path" destdir="${dist.home}/docs/api" packagenames="*">
      <classpath refid="debug.classpath"/>
    </javadoc>
  </target>

<!-- ==================== Help ======================== -->

  <target name="help"    description="print this help">
      <exec executable="ant">
       <arg value="-p"/>
      </exec>
 </target>
</project>
